version: "3.8"

volumes:
  db_data:
    name: db_data
    driver: local

  app_data:
    name: app_data
    driver: local

services:
  postgres:
    image: postgres:latest
    container_name: exchange_service_monolith_postgres
    hostname: exchange_service_monolith_postgres
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: ./
    image: exchange_service_monolith_app
    container_name: exchange_service_monolith_app
    hostname: exchange_service_monolith_app
    restart: always
    volumes:
      - app_data:/var/lib/apps/data
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_SSLMODE=${POSTGRES_SSLMODE}
      - POSTGRES_TIMEZONE=${POSTGRES_TIMEZONE}
      - JWTSECRET=${JWTSECRET}
      - MerchantID=${MerchantID}
      - ADMIN_PASSWORD =${ADMIN_PASSWORD}
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: "service_healthy"